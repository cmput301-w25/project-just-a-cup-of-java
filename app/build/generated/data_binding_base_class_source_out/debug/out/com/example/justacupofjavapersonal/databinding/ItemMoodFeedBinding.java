// Generated by view binder compiler. Do not edit!
package com.example.justacupofjavapersonal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.justacupofjavapersonal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMoodFeedBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView containsExplanation;

  @NonNull
  public final ImageView containsLocation;

  @NonNull
  public final ImageView containsPhoto;

  @NonNull
  public final TextView feedName;

  @NonNull
  public final TextView feedTime;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final ImageView moodIndicator;

  @NonNull
  public final ImageView profilePicture;

  @NonNull
  public final ImageView socialSituation;

  private ItemMoodFeedBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView containsExplanation, @NonNull ImageView containsLocation,
      @NonNull ImageView containsPhoto, @NonNull TextView feedName, @NonNull TextView feedTime,
      @NonNull LinearLayout linearLayout, @NonNull ImageView moodIndicator,
      @NonNull ImageView profilePicture, @NonNull ImageView socialSituation) {
    this.rootView = rootView;
    this.containsExplanation = containsExplanation;
    this.containsLocation = containsLocation;
    this.containsPhoto = containsPhoto;
    this.feedName = feedName;
    this.feedTime = feedTime;
    this.linearLayout = linearLayout;
    this.moodIndicator = moodIndicator;
    this.profilePicture = profilePicture;
    this.socialSituation = socialSituation;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMoodFeedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMoodFeedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_mood_feed, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMoodFeedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.containsExplanation;
      ImageView containsExplanation = ViewBindings.findChildViewById(rootView, id);
      if (containsExplanation == null) {
        break missingId;
      }

      id = R.id.containsLocation;
      ImageView containsLocation = ViewBindings.findChildViewById(rootView, id);
      if (containsLocation == null) {
        break missingId;
      }

      id = R.id.containsPhoto;
      ImageView containsPhoto = ViewBindings.findChildViewById(rootView, id);
      if (containsPhoto == null) {
        break missingId;
      }

      id = R.id.feedName;
      TextView feedName = ViewBindings.findChildViewById(rootView, id);
      if (feedName == null) {
        break missingId;
      }

      id = R.id.feedTime;
      TextView feedTime = ViewBindings.findChildViewById(rootView, id);
      if (feedTime == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.moodIndicator;
      ImageView moodIndicator = ViewBindings.findChildViewById(rootView, id);
      if (moodIndicator == null) {
        break missingId;
      }

      id = R.id.profilePicture;
      ImageView profilePicture = ViewBindings.findChildViewById(rootView, id);
      if (profilePicture == null) {
        break missingId;
      }

      id = R.id.socialSituation;
      ImageView socialSituation = ViewBindings.findChildViewById(rootView, id);
      if (socialSituation == null) {
        break missingId;
      }

      return new ItemMoodFeedBinding((ConstraintLayout) rootView, containsExplanation,
          containsLocation, containsPhoto, feedName, feedTime, linearLayout, moodIndicator,
          profilePicture, socialSituation);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
